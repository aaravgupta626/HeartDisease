# -*- coding: utf-8 -*-
"""Heart Disease Classification with Logistic Regression

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uUJOTnhl_L4KXDWo_vMYZzf2i0ZcZn1u
"""

import pandas as pd
df = pd.read_csv('https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/whitehat-ds-datasets/uci-heart-disease/heart.csv')
df

feature = df.iloc[:, :-1]
target = df['target']

from sklearn.linear_model import LogisticRegression
model = LogisticRegression()
model.fit(feature, target)
print(model.intercept_)
print(model.coef_)

model.score(feature, target)

# Adding a column containing 1s to the features array.
import numpy as np
coef_list = list(model.intercept_) + list(model.coef_[0])
new_features_array = np.append(np.ones(shape = (feature.shape[0], 1)), feature, axis = 1)
print(new_features_array.shape)
# Creating the 'sigmoid()' function.
def sigmoid(features_matrix, coef_matrix):
    sigmoid_output_matrix = 1/(1 + np.exp(-1 * np.matmul(coef_matrix, np.transpose(features_matrix))))
    return np.array(sigmoid_output_matrix)

sigmoid_outputs = sigmoid(new_features_array, coef_list)

# Scatter plot between the 'h' values and their corresponding sigmoid outputs.
plt.figure(figsize = (12, 6), dpi = 96)
plt.title("Scatter Plot Between " + r"$\beta_0 + \beta_1 x_1 + ... + \beta_{13} x_{13}$" + " and Corresponding Sigmoid Outputs")
plt.scatter(np.matmul(coef_list, np.transpose(new_features_array)), sigmoid_outputs)
plt.xlabel(r'$\beta_0 + \beta_1 x_1 + ... + \beta_{13} x_{13}$', fontsize = 12)
plt.ylabel(r'$\frac{1}{1 + e^{-(\beta_0 + \beta_1 x_1 + ... + \beta_{13} x_{13}}}$', fontsize = 18)
plt.show()